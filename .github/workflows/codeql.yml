name: CodeQL Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: CodeQL Analysis (${{ matrix.language }})
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        language: [javascript, typescript, html, scss, solidity, pug]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        id: init-codeql
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
        continue-on-error: true

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        if: success() || failure()  # Always attempt it

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: sarif-results
        if: success()

      - name: Convert SARIF to JSON
        if: success()
        run: |
          mkdir -p combined-json

          file="sarif-results/${{ matrix.language }}.sarif"
          lang="${{ matrix.language }}"

          issue_count=$(jq '[.runs[].results[]] | length' "$file")
          file_count=$(jq '[.runs[].results[].locations[0].physicalLocation.artifactLocation.uri] | length' "$file")
          line_count=$(jq '[.runs[].results[].locations[0].physicalLocation.region.startLine] | length' "$file")

          jq -n --arg language "$lang" \
                --argjson issueCount "$issue_count" \
                --argjson fileCount "$file_count" \
                --argjson lineCount "$line_count" \
                --argjson supported true \
                --slurpfile issues <(jq '[.runs[].results[]]' "$file") \
                '{
                  language: $language,
                  fileCount: $fileCount,
                  lineCount: $lineCount,
                  issues: $issues[0],
                  supported: $supported
                }' > combined-json/"$lang".json

      - name: Create Placeholder JSON for Unsupported Language
        if: failure()
        run: |
          mkdir -p combined-json
          echo '{
            "language": "${{ matrix.language }}",
            "fileCount": 0,
            "lineCount": 0,
            "issues": [],
            "supported": false
          }' > combined-json/${{ matrix.language }}.json

  combine:
    name: Combine Results
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JSON artifacts
        uses: actions/download-artifact@v4
        with:
          name: combined-json
          path: combined-json

      - name: Combine all JSONs
        run: |
          jq -s '.' combined-json/*.json > combined.json

      - name: Upload combined JSON
        uses: actions/upload-artifact@v4
        with:
          name: combined-results
          path: combined.json

  report:
    name: Generate HTML Report
    runs-on: ubuntu-latest
    needs: combine
    steps:
      - name: Download combined JSON
        uses: actions/download-artifact@v4
        with:
          name: combined-results
          path: .

      - name: Generate HTML Report
        run: |
          node <<'EOF'
          const fs = require('fs');
          const data = JSON.parse(fs.readFileSync('combined.json', 'utf8'));

          const supported = data.filter(d => d.supported);
          const unsupported = data.filter(d => !d.supported);

          let totalFiles = supported.reduce((a, b) => a + b.fileCount, 0);
          let totalLines = supported.reduce((a, b) => a + b.lineCount, 0);
          let totalIssues = supported.reduce((a, b) => a + b.issues.length, 0);

          let html = `
          <html>
          <head>
            <title>CodeQL Report</title>
            <style>
              body { font-family: sans-serif; padding: 20px; }
              .issue { border: 1px solid #ccc; padding: 10px; margin: 10px 0; }
              .summary { background: #f5f5f5; padding: 10px; margin-bottom: 20px; }
              pre { background: #eee; padding: 10px; overflow-x: auto; }
            </style>
          </head>
          <body>
            <h1>CodeQL Scan Report</h1>
            <div class="summary">
              <p><strong>Total Files:</strong> ${totalFiles}</p>
              <p><strong>Total Lines:</strong> ${totalLines}</p>
              <p><strong>Total Issues:</strong> ${totalIssues}</p>
              <p><strong>Supported Languages:</strong> ${supported.map(l => l.language + ': ' + l.issues.length + ' issues').join(', ')}</p>
              <p><strong>Unsupported Languages:</strong> ${unsupported.map(l => l.language + ': Not supported').join(', ')}</p>
            </div>
          `;

          supported.forEach(entry => {
            entry.issues.forEach(issue => {
              const ruleId = issue.ruleId || "N/A";
              const message = issue.message?.text?.replace(/\\n/g, '<br>') || "N/A";
              const fileLocation = issue.locations?.[0]?.physicalLocation?.artifactLocation?.uri || "N/A";
              const startLine = issue.locations?.[0]?.physicalLocation?.region?.startLine || "N/A";
              const snippet = issue.codeFlows?.[0]?.threadFlows?.[0]?.locations?.[0]?.location?.physicalLocation?.contextRegion?.snippet?.text || "N/A";
              const explanation = issue.help?.text || "N/A";
              const remediation = issue.help?.markdown || "N/A";

              html += `
                <div class="issue">
                  <h2>Rule: ${ruleId}</h2>
                  <p><strong>File:</strong> ${fileLocation}:${startLine}</p>
                  <p><strong>Finding:</strong> ${message}</p>
                  <p><strong>Code Snippet:</strong><br><pre>${snippet}</pre></p>
                  <p><strong>Explanation:</strong> ${explanation}</p>
                  <p><strong>Remediation:</strong> ${remediation}</p>
                </div>
              `;
            });
          });

          html += '</body></html>';
          fs.writeFileSync('report.html', html);
          EOF

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: codeql-html-report
          path: report.html
